#include <ESP8266WiFi.h>
#include <PubSubClient.h>

// WLAN-Zugangsdaten
const char* ssid = "Opa";
const char* password = "OmaundOpa";

// MQTT Server
const char* mqtt_server = "192.168.178.25";

WiFiClient espClient;
PubSubClient client(espClient);

void setup_wifi() {
  delay(10);
  // Verbindung zum WLAN starten
  Serial.println();
  Serial.print("Verbindung zu ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.print("Verbunden, IP-Adresse: ");
  Serial.println(WiFi.localIP());
}

void reconnect() {
  // Schleife, bis wir mit dem MQTT Broker verbunden sind
  while (!client.connected()) {
    Serial.print("Versuche, eine MQTT-Verbindung herzustellen...");

    // Verbindungsaufbau
    if (client.connect("ESP8266Client")) {
      Serial.println("verbunden");
    } else {
      Serial.print("Fehler, rc=");
      Serial.print(client.state());
      Serial.println(" Neuer Versuch in 5 Sekunden");
      // 5 Sekunden warten, bevor erneut versucht wird
      delay(5000);
    }
  }
}

void setup() {
  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  // Sensorwert lesen
  int sensorValue = analogRead(A0);
  
  // Sensorwert in der Konsole ausgeben
  Serial.print("Sensorwert: ");
  Serial.println(sensorValue);

  // Sensorwert als String konvertieren und ver√∂ffentlichen
  char msg[16];
  sprintf(msg, "%d", sensorValue);
  client.publish("sensor", msg);

  // Warte 5 Sekunden (5000 Millisekunden)
  delay(5000);
}
