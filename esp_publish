#include <ESP8266WiFi.h>                             //WLAN Funktionalit채t importieren
#include <PubSubClient.h>                            //MQTT importieren

const char* ssid = "Opa";                            //WLAN Name
const char* password = "OmaundOpa";                  //WLAN Password
const char* mqtt_server = "192.168.178.25";          //IP Adresse des Raspberry Pi
const char* topic = "edu/team5";                     //Variable f체rs Topic
const char* esp_name = "team5";                      //Name des ESPs

WiFiClient espClient;
PubSubClient client(espClient);

void setup_wifi() {
  delay(10);
  // Verbindung zum WLAN starten
  Serial.println();
  Serial.print("Verbindung zu ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);                       //WLAN Verbindung wird via importierter Klasse aufgebaut

  while (WiFi.status() != WL_CONNECTED) {           //Programm l채uft erst weiter, wenn wir mit dem WLAN Verbunden sind
    delay(500);
    Serial.print(".");                             
  }

  Serial.println("");
  Serial.print("Verbunden, IP-Adresse: ");
  Serial.println(WiFi.localIP());                   //Die IP des ESPs wird in der Konsole ausgegeben
}

void reconnect() {
 
  while (!client.connected()) {                         // Schleife, bis wir mit dem MQTT Broker verbunden sind
    Serial.print("Versuche, eine MQTT-Verbindung herzustellen...");

    // Verbindungsaufbau
    if (client.connect(esp_name)) {                    //Verbindung zum Broker 
      Serial.println("verbunden");
    } else {
      Serial.print("Fehler, rc=");
      Serial.print(client.state());                     //Fehlercode ausgeben
      Serial.println(" Neuer Versuch in 5 Sekunden");
      delay(5000);                                      // 5 Sekunden warten, bevor erneut versucht wird
    }
  }
}

void setup() {
  Serial.begin(115200);                                 //Baudrate einstellen !!Serial Monitor muss umgestellt werden auf 115200!!
  setup_wifi();                                         //Die Methode f체r die WLAN Verbindung wird aufgerufen, erst wenn die Verbindung steht geht das Programm weiter
  client.setServer(mqtt_server, 1883);                  //Der MQTT-Broker wird abgespeichert (1883 ist der Port)
}

void loop() {
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  
  int sensorValue = analogRead(A0);                     //Sensorwert wird eingelesen und in sensorValue abgespiechert
  Serial.print("Sensorwert: ");
  Serial.println(sensorValue);

  
  char msg[16];                                        //Erstellen eines 16er Char Arrays
  sprintf(msg, "%d", sensorValue);                     //Die Methode wandelt unseren int in einem String (char-Kette/Array) 
  //                           !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  client.publish(topic, msg);                          //Sensorwert wird gepublished auf dem deklariertem Topic

  delay(2500);                                          //Sensor Warte 2.5 Sekunden (2500 Millisekunden)
}
